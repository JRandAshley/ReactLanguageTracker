{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./App.scss\";\nimport PhonemeManager from './PhonemeManager';\nimport Testing from './Testing';\nimport Nav from './Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n/*class App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {apiResponse:\"\"}\r\n    }\r\n    callAPI(){\r\n        fetch(\"http:localhost:9000/testAPI\")\r\n        .then(res => res.test())\r\n        .then(res => this.setState({apiResponse: res}));\r\n    }\r\n    componentWillMount(){\r\n        this.callAPI();\r\n    }\r\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const [testAPI, setTestAPI] = useState();\n  this.state = {\n    apiResponse: \"\"\n  };\n\n  const callAPI = () => {\n    fetch(\"http:localhost:9000/testAPI\").then(res => res.text()) //.then(res => setTestAPI({apiResponse: res}));\n    .then(res => setState({\n      apiResponse: res\n    }));\n  };\n\n  useEffect(() => {\n    callAPI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"./app\",\n      class: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/phonemes\",\n          component: PhonemeManager\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/testing\",\n          component: Testing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst Home = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Language Tracker\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The purpose of this application is to aid linguists and constructed language builders to be able to easily record and reference sounds, words, grammer, and meaning.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: this.state.apiResponse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 5\n}, this);\n\n_c2 = Home;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/App.js"],"names":["React","useEffect","useState","PhonemeManager","Testing","Nav","BrowserRouter","Router","Switch","Route","App","state","apiResponse","callAPI","fetch","then","res","text","setState","Home"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,kBAAtD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,OAAKC,KAAL,GAAW;AAACC,IAAAA,WAAW,EAAC;AAAb,GAAX;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAEA;AAFA,KAGCF,IAHD,CAGMC,GAAG,IAAIE,QAAQ,CAAC;AAACN,MAAAA,WAAW,EAAEI;AAAd,KAAD,CAHrB;AAIH,GALD;;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAC,YAA7B;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEM;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEhB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3BQM,G;;KAAAA,G;;AA6BT,MAAMS,IAAI,GAAG,mBACT;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAKI;AAAA,cAAI,KAAKR,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,UALJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;MAAMO,I;AAUN,eAAeT,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./App.scss\";\r\nimport PhonemeManager from './PhonemeManager';\r\nimport Testing from './Testing';\r\nimport Nav from './Nav';\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\n/*class App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {apiResponse:\"\"}\r\n    }\r\n    callAPI(){\r\n        fetch(\"http:localhost:9000/testAPI\")\r\n        .then(res => res.test())\r\n        .then(res => this.setState({apiResponse: res}));\r\n    }\r\n    componentWillMount(){\r\n        this.callAPI();\r\n    }\r\n}*/\r\nfunction App() {\r\n    //const [testAPI, setTestAPI] = useState();\r\n    this.state={apiResponse:\"\"};\r\n    const callAPI = () => {\r\n        fetch(\"http:localhost:9000/testAPI\")\r\n        .then(res => res.text())\r\n        //.then(res => setTestAPI({apiResponse: res}));\r\n        .then(res => setState({apiResponse: res}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        callAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"./app\" class=\"background\">\r\n                <Nav />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/phonemes\" component={PhonemeManager}/>\r\n                    <Route path=\"/testing\" component={Testing}/>\r\n                </Switch>\r\n                <hr />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <h1>Language Tracker</h1>\r\n        <p>The purpose of this application is to aid \r\n            linguists and constructed language builders to be able to easily \r\n            record and reference sounds, words, grammer, and meaning.</p>\r\n        <p>{this.state.apiResponse}</p>\r\n    </div>\r\n)\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
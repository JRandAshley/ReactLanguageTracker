{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\LangAppReact\\\\Client\\\\reactlangapp\\\\src\\\\MorphemeManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./App.scss\";\nimport Axios from 'axios';\nimport Phoneme from './Phoneme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MorphemeManager() {\n  _s();\n\n  const initialData = [];\n  const [morphemes, setMorphemes] = useState(initialData);\n  const [phonemes, setPhonemes] = useState([]);\n\n  const getPhonemes = () => {\n    new Promise((resolve, reject) => {\n      Axios.get(\"http://localhost:3001/api/get\").then(response => {\n        setPhonemes(response.data);\n      });\n      resolve(\"updated phonemes from database\");\n    });\n  };\n\n  const getTypeAsWord = type => {\n    if (type === \"C\") {\n      return \"Consonant\";\n    }\n\n    if (type === \"V\") {\n      return \"Vowel\";\n    } else {\n      return \"Phoneme\";\n    }\n  };\n\n  useEffect(() => {\n    getPhonemes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"flexbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      align: \"center\",\n      children: \"Morphemes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flexbox-scroller\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flexbox-row-container\",\n        children: Object.values(phonemes).map(phoneme => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flexbox-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: phoneme.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Easy Type:\", phoneme.easyType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [phoneme.sol, \" \", phoneme.poa, \" \", phoneme.moa, phoneme.height, \" \", phoneme.backness, \" \", phoneme.rounding, \" \", getTypeAsWord(phoneme.type)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MorphemeManager, \"3ek/+IzSaXMkT1njvnvVX0sS83c=\");\n\n_c = MorphemeManager;\nexport default MorphemeManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"MorphemeManager\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/LangAppReact/Client/reactlangapp/src/MorphemeManager.js"],"names":["React","useState","useEffect","Axios","Phoneme","MorphemeManager","initialData","morphemes","setMorphemes","phonemes","setPhonemes","getPhonemes","Promise","resolve","reject","get","then","response","data","getTypeAsWord","type","Object","values","map","phoneme","symbol","easyType","sol","poa","moa","height","backness","rounding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAMC,WAAW,GAAG,EAApB;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACK,WAAD,CAA1C;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACtB,QAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BX,MAAAA,KAAK,CAACY,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1DP,QAAAA,WAAW,CAACO,QAAQ,CAACC,IAAV,CAAX;AACH,OAFD;AAGAL,MAAAA,OAAO,CAAC,gCAAD,CAAP;AACH,KALD;AAMH,GAPD;;AASA,QAAMM,aAAa,GAAIC,IAAD,IAAU;AAC5B,QAAGA,IAAI,KAAK,GAAZ,EAAgB;AACZ,aAAO,WAAP;AACH;;AACD,QAAGA,IAAI,KAAK,GAAZ,EAAgB;AACZ,aAAO,OAAP;AACH,KAFD,MAGI;AACA,aAAO,SAAP;AACH;AACJ,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,uBAAX;AAAA,kBACKU,MAAM,CAACC,MAAP,CAAcb,QAAd,EAAwBc,GAAxB,CAA4BC,OAAO,iBAChC;AAAK,UAAA,KAAK,EAAC,cAAX;AAAA,kCACI;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,qCAAeD,OAAO,CAACE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,uBAAKF,OAAO,CAACG,GAAb,OAAmBH,OAAO,CAACI,GAA3B,OAAiCJ,OAAO,CAACK,GAAzC,EACCL,OAAO,CAACM,MADT,OACkBN,OAAO,CAACO,QAD1B,OACqCP,OAAO,CAACQ,QAD7C,OACwDb,aAAa,CAACK,OAAO,CAACJ,IAAT,CADrE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBH;;GAnDQf,e;;KAAAA,e;AAoDT,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"./App.scss\";\r\nimport Axios from 'axios';\r\nimport Phoneme from './Phoneme';\r\n\r\nfunction MorphemeManager() { \r\n    const initialData = [\r\n        \r\n    ]\r\n\r\n    const [morphemes, setMorphemes] = useState(initialData)\r\n\r\n    const [phonemes, setPhonemes] = useState([])\r\n\r\n    const getPhonemes = () => {\r\n        new Promise((resolve, reject) => {\r\n            Axios.get(\"http://localhost:3001/api/get\").then((response) => {\r\n                setPhonemes(response.data);\r\n            });\r\n            resolve(\"updated phonemes from database\")\r\n        })\r\n    }\r\n\r\n    const getTypeAsWord = (type) => {\r\n        if(type === \"C\"){\r\n            return \"Consonant\"\r\n        }\r\n        if(type === \"V\"){\r\n            return \"Vowel\"\r\n        }\r\n        else{\r\n            return \"Phoneme\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPhonemes();\r\n    }, []);\r\n\r\n    return(\r\n    <div class=\"flexbox-container\">\r\n        <h1 align=\"center\">Morphemes</h1>\r\n        <div class=\"flexbox-scroller\">\r\n            <div class=\"flexbox-row-container\">\r\n                {Object.values(phonemes).map(phoneme =>(\r\n                    <div class=\"flexbox-item\">\r\n                        <h1>{phoneme.symbol}</h1>\r\n                        <h2>Easy Type:{phoneme.easyType}</h2>\r\n                        <h2>{phoneme.sol} {phoneme.poa} {phoneme.moa} \r\n                        {phoneme.height} {phoneme.backness} {phoneme.rounding} {getTypeAsWord(phoneme.type)}</h2>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default MorphemeManager"]},"metadata":{},"sourceType":"module"}
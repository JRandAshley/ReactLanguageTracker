{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\PhonemeManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Phoneme from './Phoneme';\nimport IPAConsonants from './IPAConsonants';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PhonemeManager() {\n  _s();\n\n  const [phonemes, setPhonemes] = useState([{\n    symbol: 'A',\n    easyType: 'a',\n    type: 'V',\n    notes: 'It is a',\n    height: 'low',\n    backness: 'front',\n    rounding: 'unrounded',\n    tenseness: 'lax'\n  }, {\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c',\n    sol: 'state c',\n    poa: 'place c',\n    moa: 'manner c'\n  }, {\n    symbol: 'I',\n    easyType: 'i',\n    type: 'V',\n    notes: 'an I',\n    height: 'mid',\n    backness: 'mid',\n    rounding: 'rounded',\n    tenseness: 'lax'\n  }, {\n    symbol: 'O',\n    easyType: 'o',\n    type: 'V',\n    notes: 'notes',\n    height: 'high',\n    backness: 'back',\n    rounding: 'rounded',\n    tenseness: 'tense'\n  }]);\n  {\n    /*const uniqueTags = [];\r\n       phonemes.map(phoneme => {\r\n           var findPhoneme = uniqueTags.find(x => x.sol === phoneme.sol);\r\n           if(!findPhoneme){\r\n               uniqueTags.push(phoneme);\r\n           }\r\n       });\r\n    */\n  }\n  let uniqueSOL = [...new Set(phonemes)];\n  console.log(uniqueTags);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IPAConsonants, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"header\",\n      children: \"Consonants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"float-container\",\n      children: phonemes.filter(phoneme => phoneme.type === \"C\").map(phoneme => /*#__PURE__*/_jsxDEV(Phoneme, {\n        symbol: phoneme.symbol,\n        easyType: phoneme.easyType,\n        type: phoneme.type,\n        notes: phoneme.notes,\n        sol: phoneme.sol,\n        poa: phoneme.poa,\n        moa: phoneme.moa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"header\",\n      children: \"Vowels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"float-container\",\n      children: phonemes.filter(phoneme => phoneme.type === \"V\").map(phoneme => /*#__PURE__*/_jsxDEV(Phoneme, {\n        symbol: phoneme.symbol,\n        easyType: phoneme.easyType,\n        type: phoneme.type,\n        notes: phoneme.notes,\n        height: phoneme.height,\n        backness: phoneme.backness,\n        rounding: phoneme.rounding,\n        tenseness: phoneme.tenseness\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhonemeManager, \"03T3lFuv0ARpL5aV8zqmJkHGy2o=\");\n\n_c = PhonemeManager;\nexport default PhonemeManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhonemeManager\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/PhonemeManager.js"],"names":["React","useState","useEffect","Phoneme","IPAConsonants","PhonemeManager","phonemes","setPhonemes","symbol","easyType","type","notes","height","backness","rounding","tenseness","sol","poa","moa","uniqueSOL","Set","console","log","uniqueTags","filter","phoneme","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Phoneme from './Phoneme';\r\nimport IPAConsonants from './IPAConsonants';\r\nimport \"./App.css\";\r\n\r\nfunction PhonemeManager() {\r\n    const [phonemes, setPhonemes] = useState([\r\n        {symbol: 'A', easyType: 'a', type: 'V', notes: 'It is a',\r\n        height:'low', backness:'front', rounding:'unrounded', tenseness:'lax'},\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c',\r\n        sol: 'state c', poa: 'place c', moa: 'manner c'},\r\n        {symbol: 'I', easyType: 'i', type: 'V', notes: 'an I',\r\n        height:'mid', backness:'mid', rounding:'rounded', tenseness:'lax'},\r\n        {symbol:'O', easyType:'o', type:'V', notes:'notes',\r\n        height:'high', backness:'back', rounding:'rounded', tenseness:'tense'}\r\n    ])\r\n\r\n    {/*const uniqueTags = [];\r\n        phonemes.map(phoneme => {\r\n            var findPhoneme = uniqueTags.find(x => x.sol === phoneme.sol);\r\n            if(!findPhoneme){\r\n                uniqueTags.push(phoneme);\r\n            }\r\n        });\r\n    */}\r\n\r\n    let uniqueSOL = [...new Set(phonemes)]\r\n\r\n    console.log(uniqueTags)\r\n\r\n    return (\r\n        <div>\r\n            <IPAConsonants />\r\n            <hr />\r\n\r\n            <h1 class=\"header\">Consonants</h1>\r\n            <div class=\"float-container\">\r\n                {phonemes.filter(phoneme => phoneme.type === \"C\").map(phoneme =>(\r\n                    <Phoneme symbol={phoneme.symbol} easyType={phoneme.easyType} type={phoneme.type} notes={phoneme.notes}\r\n                    sol={phoneme.sol} poa={phoneme.poa} moa={phoneme.moa}/>\r\n                ))}\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <h1 class=\"header\">Vowels</h1>\r\n            <div class=\"float-container\">\r\n                {phonemes.filter(phoneme => phoneme.type === \"V\").map(phoneme =>(\r\n                    <Phoneme symbol={phoneme.symbol} easyType={phoneme.easyType} type={phoneme.type} notes={phoneme.notes}\r\n                    height={phoneme.height} backness={phoneme.backness} rounding={phoneme.rounding} tenseness={phoneme.tenseness}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PhonemeManager;"]},"metadata":{},"sourceType":"module"}
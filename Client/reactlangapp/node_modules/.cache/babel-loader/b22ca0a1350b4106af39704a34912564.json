{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\nimport Phoneme from './Phoneme';\nimport Consonant from './Phoneme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [phonemes, setPhonemes] = useState([{\n    symbol: 'A',\n    easyType: 'a',\n    type: '',\n    notes: 'It is a'\n  }, {\n    symbol: 'B',\n    easyType: 'b',\n    type: '',\n    notes: 'b letter'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: '',\n    notes: 'a c'\n  }, {\n    symbol: 'I',\n    easyType: 'i',\n    type: '',\n    notes: 'an I'\n  }]);\n  const [consonants, setConsonants] = useState([{\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c',\n    sol: 'state c',\n    poa: 'place c',\n    moa: 'manner c'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: phonemes.map(phoneme => /*#__PURE__*/_jsxDEV(Phoneme, {\n        symbol: phoneme.symbol,\n        easyType: phoneme.easyType,\n        type: phoneme.type,\n        notes: phoneme.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: consonants.map(consonant => /*#__PURE__*/_jsxDEV(Consonant, {\n        symbol: consonant.symbol,\n        easyType: consonant.easyType,\n        type: consonant.type,\n        notes: consonant.notes,\n        sol: consonant.sol,\n        poa: consonant.poa,\n        moa: consonant.moa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"z3ol8oHVhlcSN09b+KjSpWh4gQ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/App.js"],"names":["React","useState","unstable_renderSubtreeIntoContainer","Phoneme","Consonant","App","phonemes","setPhonemes","symbol","easyType","type","notes","consonants","setConsonants","sol","poa","moa","map","phoneme","consonant"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,mCAAT,QAAoD,WAApD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CACrC;AAACO,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GADqC,EAErC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAFqC,EAGrC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAHqC,EAIrC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,EAAnC;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAJqC,CAAD,CAAxC;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CACzC;AAACO,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE,UAA/C;AACAG,IAAAA,GAAG,EAAE,OADL;AACcC,IAAAA,GAAG,EAAE,OADnB;AAC4BC,IAAAA,GAAG,EAAE;AADjC,GADyC,EAGzC;AAACR,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE,KAA/C;AACAG,IAAAA,GAAG,EAAE,SADL;AACgBC,IAAAA,GAAG,EAAE,SADrB;AACgCC,IAAAA,GAAG,EAAE;AADrC,GAHyC,CAAD,CAA5C;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBACKV,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBACjB,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEA,OAAO,CAACV,MAAzB;AAAiC,QAAA,QAAQ,EAAEU,OAAO,CAACT,QAAnD;AAA6D,QAAA,IAAI,EAAES,OAAO,CAACR,IAA3E;AAAiF,QAAA,KAAK,EAAEQ,OAAO,CAACP;AAAhG;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gBACKC,UAAU,CAACK,GAAX,CAAeE,SAAS,iBACrB,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEA,SAAS,CAACX,MAA7B;AAAqC,QAAA,QAAQ,EAAEW,SAAS,CAACV,QAAzD;AAAmE,QAAA,IAAI,EAAEU,SAAS,CAACT,IAAnF;AAAyF,QAAA,KAAK,EAAES,SAAS,CAACR,KAA1G;AACA,QAAA,GAAG,EAAEQ,SAAS,CAACL,GADf;AACoB,QAAA,GAAG,EAAEK,SAAS,CAACJ,GADnC;AACwC,QAAA,GAAG,EAAEI,SAAS,CAACH;AADvD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7BQX,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\r\nimport Phoneme from './Phoneme';\r\nimport Consonant from './Phoneme';\r\n\r\nfunction App() {\r\n    const [phonemes, setPhonemes] = useState([\r\n        {symbol: 'A', easyType: 'a', type: '', notes: 'It is a'},\r\n        {symbol: 'B', easyType: 'b', type: '', notes: 'b letter'},\r\n        {symbol: 'C', easyType: 'c', type: '', notes: 'a c'},\r\n        {symbol: 'I', easyType: 'i', type: '', notes: 'an I'}\r\n    ])\r\n    const [consonants, setConsonants] = useState([\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c',\r\n        sol: 'state c', poa: 'place c', moa: 'manner c'}\r\n    ])\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div>\r\n                {phonemes.map(phoneme =>(\r\n                    <Phoneme symbol={phoneme.symbol} easyType={phoneme.easyType} type={phoneme.type} notes={phoneme.notes}/>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                {consonants.map(consonant =>(\r\n                    <Consonant symbol={consonant.symbol} easyType={consonant.easyType} type={consonant.type} notes={consonant.notes}\r\n                    sol={consonant.sol} poa={consonant.poa} moa={consonant.moa}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\nimport Phoneme from './Phoneme';\nimport Consonant from './Phoneme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [phonemes, setPhonemes] = useState([{\n    symbol: 'A',\n    easyType: 'a',\n    type: '',\n    notes: 'It is a'\n  }, {\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c'\n  }, {\n    symbol: 'I',\n    easyType: 'i',\n    type: '',\n    notes: 'an I'\n  }]);\n  const [consonants, setConsonants] = useState([{\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c',\n    sol: 'state c',\n    poa: 'place c',\n    moa: 'manner c'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"header\",\n          children: \"Phonemes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), phonemes.map(phoneme => /*#__PURE__*/_jsxDEV(Phoneme, {\n          symbol: phoneme.symbol,\n          easyType: phoneme.easyType,\n          type: phoneme.type,\n          notes: phoneme.notes,\n          sol: phoneme.sol,\n          poa: phoneme.poa,\n          moa: phoneme.moa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-container\",\n        children: consonants.map(consonant => /*#__PURE__*/_jsxDEV(Consonant, {\n          symbol: consonant.symbol,\n          easyType: consonant.easyType,\n          type: consonant.type,\n          notes: consonant.notes,\n          sol: consonant.sol,\n          poa: consonant.poa,\n          moa: consonant.moa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-container\",\n        children: /*#__PURE__*/_jsxDEV(Phoneme, {\n          symbol: \"K\",\n          easyType: \"k\",\n          type: \"C\",\n          notes: \"notes\",\n          sol: \"state\",\n          poa: \"place\",\n          moa: \"manner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"qqG0ffte5a75v1wToJJc8PttrLw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/App.js"],"names":["React","useState","unstable_renderSubtreeIntoContainer","Phoneme","Consonant","App","phonemes","setPhonemes","symbol","easyType","type","notes","sol","poa","moa","consonants","setConsonants","map","phoneme","consonant"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\r\nimport Phoneme from './Phoneme';\r\nimport Consonant from './Phoneme';\r\n\r\nfunction App() {\r\n    const [phonemes, setPhonemes] = useState([\r\n        {symbol: 'A', easyType: 'a', type: '', notes: 'It is a'},\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c'},\r\n        {symbol: 'I', easyType: 'i', type: '', notes: 'an I'}\r\n    ])\r\n    const [consonants, setConsonants] = useState([\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c',\r\n        sol: 'state c', poa: 'place c', moa: 'manner c'}\r\n    ])\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div>\r\n                <div class=\"float-container\">\r\n                    <h1 class=\"header\">Phonemes</h1>\r\n                    {phonemes.map(phoneme =>(\r\n                        <Phoneme symbol={phoneme.symbol} easyType={phoneme.easyType} type={phoneme.type} notes={phoneme.notes}\r\n                        sol={phoneme.sol} poa={phoneme.poa} moa={phoneme.moa}/>\r\n                    ))}\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div class=\"float-container\">\r\n                    {consonants.map(consonant =>(\r\n                        <Consonant symbol={consonant.symbol} easyType={consonant.easyType} type={consonant.type} notes={consonant.notes}\r\n                        sol={consonant.sol} poa={consonant.poa} moa={consonant.moa}/>\r\n                    ))}\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div class=\"float-container\">\r\n                    <Phoneme symbol={\"K\"} easyType={\"k\"}\r\n                    type={\"C\"} notes={\"notes\"}\r\n                        sol={\"state\"} poa={\"place\"} moa={\"manner\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
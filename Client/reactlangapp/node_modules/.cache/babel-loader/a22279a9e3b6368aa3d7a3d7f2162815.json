{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PhonemeManager from './PhonemeManager';\nimport Testing from './Testing';\nimport Nav from './Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [phonemes, setPhonemes] = useState([{\n    symbol: 'A',\n    easyType: 'a',\n    type: '',\n    notes: 'It is a'\n  }, {\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c',\n    sol: 'state c',\n    poa: 'place c',\n    moa: 'manner c'\n  }, {\n    symbol: 'I',\n    easyType: 'i',\n    type: '',\n    notes: 'an I'\n  }, {\n    symbol: 'O',\n    easyType: 'o',\n    type: 'V',\n    notes: 'notes',\n    height: 'high',\n    backness: 'back',\n    rounding: 'round',\n    tenseness: 'tense'\n  }]);\n  const [consonants, setConsonants] = useState([{\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter',\n    sol: 'state',\n    poa: 'place',\n    moa: 'manner'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c',\n    sol: 'state c',\n    poa: 'place c',\n    moa: 'manner c'\n  }]);\n  const [theme, setTheme] = useState(\"light\"); //default page theme\n\n  function toggleTheme() {\n    //light of dark mode\n    if (theme == \"light\") {\n      setTheme(\"dark\");\n    } else if (theme == \"dark\") {\n      setTheme(\"light\");\n    } else {\n      setTheme(\"light\");\n    }\n  }\n\n  useEffect(() => {\n    console.log('useEffect - Updating document title');\n    document.title = `The theme is ${theme}.`;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"./app\",\n      id: theme,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/phoneme\",\n          component: PhonemeManager\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/testing\",\n          component: Testing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"288ge91GYL1lMNul5YxRFcWrTys=\");\n\n_c = App;\n\nconst Home = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Home Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 5\n}, this);\n\n_c2 = Home;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/App.js"],"names":["React","useState","useEffect","PhonemeManager","Testing","Nav","BrowserRouter","Router","Switch","Route","App","phonemes","setPhonemes","symbol","easyType","type","notes","sol","poa","moa","height","backness","rounding","tenseness","consonants","setConsonants","theme","setTheme","toggleTheme","console","log","document","title","Home"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PhonemeManager from './PhonemeManager';\r\nimport Testing from './Testing';\r\nimport Nav from './Nav';\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n    const [phonemes, setPhonemes] = useState([\r\n        {symbol: 'A', easyType: 'a', type: '', notes: 'It is a'},\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c',\r\n        sol: 'state c', poa: 'place c', moa: 'manner c'},\r\n        {symbol: 'I', easyType: 'i', type: '', notes: 'an I'},\r\n        {symbol:'O', easyType:'o', type:'V', notes:'notes',\r\n        height:'high', backness:'back', rounding:'round', tenseness:'tense'}\r\n    ])\r\n    const [consonants, setConsonants] = useState([\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter',\r\n        sol: 'state', poa: 'place', moa: 'manner'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c',\r\n        sol: 'state c', poa: 'place c', moa: 'manner c'}\r\n    ])\r\n\r\n    const [theme, setTheme] = useState(\"light\") //default page theme\r\n\r\n    function toggleTheme(){ //light of dark mode\r\n        if(theme == \"light\"){\r\n            setTheme(\"dark\")\r\n        }\r\n        else if(theme == \"dark\"){\r\n            setTheme(\"light\")\r\n        }\r\n        else{\r\n            setTheme(\"light\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect - Updating document title')\r\n        document.title = `The theme is ${theme}.`\r\n    }, [theme])\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"./app\" id={theme}>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/phoneme\" component={PhonemeManager}/>\r\n                    <Route path=\"/testing\" component={Testing}/>\r\n                </Switch>\r\n                <hr />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <h1>Home Page</h1>\r\n    </div>\r\n)\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
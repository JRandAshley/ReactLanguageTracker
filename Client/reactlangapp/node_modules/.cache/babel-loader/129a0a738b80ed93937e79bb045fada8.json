{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\reactlangapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\nimport Phoneme from './Phoneme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [phonemes, setPhonemes] = useState([{\n    symbol: 'A',\n    easyType: 'a',\n    type: 'V',\n    notes: 'It is a'\n  }, {\n    symbol: 'B',\n    easyType: 'b',\n    type: 'C',\n    notes: 'b letter'\n  }, {\n    symbol: 'C',\n    easyType: 'c',\n    type: 'C',\n    notes: 'a c'\n  }, {\n    symbol: 'I',\n    easyType: 'i',\n    type: 'V',\n    notes: 'an I'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: phonemes.map(phoneme => /*#__PURE__*/_jsxDEV(Phoneme, {\n      symbol: phoneme.symbol,\n      easyType: phoneme.easyType,\n      type: phoneme.type,\n      notes: phoneme.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/zniqYfXBstu7IzYFgfvQRrPkC0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/reactlangapp/src/App.js"],"names":["React","useState","unstable_renderSubtreeIntoContainer","Phoneme","App","phonemes","setPhonemes","symbol","easyType","type","notes","map","phoneme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,mCAAT,QAAoD,WAApD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CACrC;AAACM,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GADqC,EAErC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAFqC,EAGrC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAHqC,EAIrC;AAACH,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,IAAI,EAAE,GAAnC;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAJqC,CAAD,CAAxC;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAIKL,QAAQ,CAACM,GAAT,CAAaC,OAAO,iBACjB,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEA,OAAO,CAACL,MAAzB;AAAiC,MAAA,QAAQ,EAAEK,OAAO,CAACJ,QAAnD;AAA6D,MAAA,IAAI,EAAEI,OAAO,CAACH,IAA3E;AAAiF,MAAA,KAAK,EAAEG,OAAO,CAACF;AAAhG;AAAA;AAAA;AAAA;AAAA,YADH;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlBQN,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\r\nimport Phoneme from './Phoneme';\r\n\r\nfunction App() {\r\n    const [phonemes, setPhonemes] = useState([\r\n        {symbol: 'A', easyType: 'a', type: 'V', notes: 'It is a'},\r\n        {symbol: 'B', easyType: 'b', type: 'C', notes: 'b letter'},\r\n        {symbol: 'C', easyType: 'c', type: 'C', notes: 'a c'},\r\n        {symbol: 'I', easyType: 'i', type: 'V', notes: 'an I'}\r\n    ])\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            {/*users.map(user =>(\r\n                <Tweet name={user.name} message={user.message}/>\r\n            ))*/}\r\n            {phonemes.map(phoneme =>(\r\n                <Phoneme symbol={phoneme.symbol} easyType={phoneme.easyType} type={phoneme.type} notes={phoneme.notes}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}